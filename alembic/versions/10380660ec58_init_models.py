"""init models

Revision ID: 10380660ec58
Revises: 
Create Date: 2024-04-07 08:55:41.796440

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision = '10380660ec58'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=26), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('harvester_uid', sa.String(length=50), nullable=False),
    sa.Column('project_uuid', sa.Uuid(), nullable=False),
    sa.Column('company_uuid', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_equipment_company_uuid'), 'equipment', ['company_uuid'], unique=False)
    op.create_index(op.f('ix_equipment_harvester_uid'), 'equipment', ['harvester_uid'], unique=False)
    op.create_index(op.f('ix_equipment_id'), 'equipment', ['id'], unique=False)
    op.create_index(op.f('ix_equipment_number'), 'equipment', ['number'], unique=False)
    op.create_index(op.f('ix_equipment_project_uuid'), 'equipment', ['project_uuid'], unique=False)
    op.create_geospatial_table('herb',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('harvester_uid', sa.String(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('harvest_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('arrival_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('gps_location', Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('herb_type', sa.String(), nullable=True),
    sa.Column('herb_color', sa.String(), nullable=True),
    sa.Column('herb_image', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_herb_gps_location', 'herb', ['gps_location'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_index(op.f('ix_herb_equipment_id'), 'herb', ['equipment_id'], unique=False)
    op.create_index(op.f('ix_herb_harvester_uid'), 'herb', ['harvester_uid'], unique=False)
    op.create_index(op.f('ix_herb_herb_color'), 'herb', ['herb_color'], unique=False)
    op.create_index(op.f('ix_herb_herb_type'), 'herb', ['herb_type'], unique=False)
    op.create_index(op.f('ix_herb_id'), 'herb', ['id'], unique=False)
    op.create_index(op.f('ix_herb_region'), 'herb', ['region'], unique=False)
    op.create_index(op.f('ix_herb_uuid'), 'herb', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_herb_uuid'), table_name='herb')
    op.drop_index(op.f('ix_herb_region'), table_name='herb')
    op.drop_index(op.f('ix_herb_id'), table_name='herb')
    op.drop_index(op.f('ix_herb_herb_type'), table_name='herb')
    op.drop_index(op.f('ix_herb_herb_color'), table_name='herb')
    op.drop_index(op.f('ix_herb_harvester_uid'), table_name='herb')
    op.drop_index(op.f('ix_herb_equipment_id'), table_name='herb')
    op.drop_geospatial_index('idx_herb_gps_location', table_name='herb', postgresql_using='gist', column_name='gps_location')
    op.drop_geospatial_table('herb')
    op.drop_index(op.f('ix_equipment_project_uuid'), table_name='equipment')
    op.drop_index(op.f('ix_equipment_number'), table_name='equipment')
    op.drop_index(op.f('ix_equipment_id'), table_name='equipment')
    op.drop_index(op.f('ix_equipment_harvester_uid'), table_name='equipment')
    op.drop_index(op.f('ix_equipment_company_uuid'), table_name='equipment')
    op.drop_table('equipment')
    # ### end Alembic commands ###
